@model MyShop.Models.Product

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Home", "Index", "Home")</li>
                <li>@Html.ActionLink("Product Management", "Products", "Admin")</li>
                <li class="active">Edit</li>
            </ol>
        </div>
    </div>
</div>
<div class="container">
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-xs-12">
                <div class="admin__products-wrapper">
                    <div class="admin__group">
                        <div class="admin__details">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ProductID)
                            <table class="table">
                                <tr>
                                    <td class="admin__label">@Html.DisplayNameFor(model => model.IsPublish)</td>
                                    <td class="admin__value">
                                        @Html.RadioButtonFor(model => model.IsPublish, 1, new { id = "yes" })
                                        @Html.Label("yes", "Yes")

                                        @Html.RadioButtonFor(model => model.IsPublish, 0, new { id = "no" })
                                        @Html.Label("no", "No")
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="ProductName">@Html.DisplayNameFor(model => model.ProductName)</label></td>
                                    <td class="admin__value">
                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @id = "ProductName", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="CategoryID">@Html.DisplayNameFor(model => model.CategoryID)</label></td>
                                    <td class="admin__value">
                                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @id = "CategoryID", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="ProductDescription">@Html.DisplayNameFor(model => model.ProductDescription)</label></td>
                                    <td class="admin__value">
                                        @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @id = "ProductDescription", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="Price">@Html.DisplayNameFor(model => model.Price)</label></td>
                                    <td class="admin__value">
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @id = "Price", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="DiscountedPrice">@Html.DisplayNameFor(model => model.DiscountedPrice)</label></td>
                                    <td class="admin__value">
                                        @Html.EditorFor(model => model.DiscountedPrice, new { htmlAttributes = new { @id = "DiscountedPrice", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DiscountedPrice, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="SalesPeriodStartAt">@Html.DisplayNameFor(model => model.SalesPeriodStartAt)</label></td>
                                    <td class="admin__value">
                                        @Html.EditorFor(model => model.SalesPeriodStartAt, new { htmlAttributes = new { @id = "SalesPeriodStartAt", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SalesPeriodStartAt, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="SalesPeriodEndAt">@Html.DisplayNameFor(model => model.SalesPeriodEndAt)</label></td>
                                    <td class="admin__value">
                                        @Html.EditorFor(model => model.SalesPeriodEndAt, new { htmlAttributes = new { @id ="SalesPeriodEndAt", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SalesPeriodEndAt, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="StockQuantity">@Html.DisplayNameFor(model => model.StockQuantity)</label></td>
                                    <td class="admin__value">
                                        @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @id = "StockQuantity", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="admin__label"><label for="fileUpload">@Html.DisplayNameFor(model => model.FilePath)</label></td>
                                    <td class="admin__value">
                                        @*@Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control", @id = "fileUpload", type="file" } })*@
                                        <input class="form-control text-box single-line" id="fileUpload" name="FilePath" type="file">
                                        <br />
                                        <img src="/Uploads/@Model.FilePath" class="thumbnail" alt="thumbnail" />
                                        @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 text-center">
                <div class="admin__footer-button-wrapper">
                    <input class="btn btn-default btn-save" type="submit" value="Save Changes"><a class="btn btn-default btn-back" href="@Url.Action("Products", "Admin")">Back to list</a>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {

        $("form").submit(function (e) {
            e.preventDefault();

            $.ajax({
                url: "/api/product/@(Model.ProductID)",
                method: "PUT",
                data: new FormData(this),
                cache: false,
                contentType: false,
                processData: false,
                statusCode: {
                    200: function(){
                        window.location.href = "/admin/products";
                    }
                },
                error: function (response) {
                    console.log(response)
                }
            });
        });
    })
</script>
}
